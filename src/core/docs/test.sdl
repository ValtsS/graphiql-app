type Query {
  # Query types
"""
TestComment1
"""
  getLanguageSpecification: LanguageSpecification
  getGraphQLSchema: GraphQLSchema

  # Scalar types
  getString: String
  getInt: Int
  getFloat: Float
  getBoolean: Boolean
  getID: ID

  # Object types
  getObjectType: ObjectType
  getFields: [Field]

  # Input types
  getInputType: InputType
  getInputFields: [InputField]

  # Enum types
  getEnumType: EnumType
  getEnumValues: [EnumValue]

  # Interface types
  getInterfaceType: InterfaceType
  getInterfaceFields: [Field]

  # Union types
  getUnionType: UnionType
  getUnionTypes: [ObjectType]

  # Directives
  getDirectives: [Directive]
  
          getDefaults(
            """
            $$2##
            """
            a:Int = 4,
            """
            $$3##
            """
             b:Float = 3.3,
             """
             $$4##
             """
             c: String = "TestValue",
             """
             $$5##
             """
             d:Boolean = false,
             """
             $$6##
             """
             e:Boolean = true,
             """
             $$7##
             """
             f:Int=NULL,
             """
             $$8##
             """
             g:UserRole = ADMIN ): Int  getDefaultsList( g:[UserRole]=[USER,GUEST]):Int
  getDefaultsObject( h:InputObject = { name: "12345", description: "5678" } ):Int
  getRoles: UserRole

  getCurrentTime: DateTime
}

type LanguageSpecification {
  # Language features
  schemaDefinition: String!
  scalarTypes: [ScalarType!]!
  objectTypes: [ObjectType!]
  inputTypes: [InputType!]
  enumTypes: [EnumType!]
  interfaceTypes: [InterfaceType!]
  unionTypes: [UnionType!]
  directives: [Directive!]
}

type ScalarType {
  name: String
  description: String
}

type ObjectType {
  name: String
  description: String
  roll(numRolls: Int!): [Int]
  fields: [Field]
  interfaces: [InterfaceType]
}

type Field {
  name: String
  description: String
  args: [InputField]
  type: Type
  isDeprecated: Boolean
  deprecationReason: String
}

type InputType {
  name: String
  description: String
  inputFields: [InputField]
}

type InputField {
  name: String
  description: String
  type: Type
  defaultValue: String
}

type EnumType {
  name: String
  description: String
  enumValues: [EnumValue]
}

type EnumValue {
  name: String
  description: String
  isDeprecated: Boolean
  deprecationReason: String
}

interface InterfaceType {
  name: String
  description: String
  fields: [Field]
}

type UnionType {
  name: String
  description: String
  possibleTypes: [ObjectType]
}

type Directive {
  name: String
  description: String
  locations: [String]
  args: [InputField]
}

"""
$$11TESTCOMMENT##
"""
union Type = ScalarType | ObjectType | InputType | EnumType | InterfaceType | UnionType | ListType

type ListType {
  ofType: Type
}

type GraphQLSchema {
  queryType: ObjectType
  mutationType: ObjectType
  subscriptionType: ObjectType
  types: [Type]
  directives: [Directive]
}

"""
//$$ABC##
"""
enum UserRole {
  """
  //$$FGH##
  """
  ADMIN
  """
  //$$IJK##
  """
  USER
  GUEST
}

input InputObject {
  name: String
  description: String
}

"""
The `DateTime` scalar represents an ISO-8601 compliant date time type.
"""
scalar DateTime